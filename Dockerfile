#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "update.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

FROM ubuntu:16.04

# persistent / runtime deps
ENV BUILD_PRES 	"ca-certificates \
		curl \
		libedit2 \
		libsqlite3-0 \
		libxml2 \
		xz-utils \
		build-essential \
		wget"
ENV PHPIZE_DEPS "autoconf \
		file \
		g++ \
		gcc \
		libc-dev \
		make \
		pkg-config \
		re2c"
ENV BUILD_DEPS  "libcurl4-openssl-dev \
		libedit-dev \
		libsqlite3-dev \
		libssl-dev \
		libxml2-dev"
ENV APT_INSTALL "apt install --no-install-recommends --yes"
ENV PHP_INI_DIR /etc/php
ENV SRC_DIR /usr/src

RUN apt update \
	&& ${APT_INSTALL} ${BUILD_PRES} ${BUILD_DEPS} ${PHPIZE_DEPS} \
	&& rm -r /var/lib/apt/lists/*

RUN mkdir -p ${PHP_INI_DIR}/conf.d

ENV CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV CPPFLAGS="$CFLAGS"
ENV LDFLAGS="-Wl,-O2 -Wl,--hash-style=both"

ENV GPG_KEYS A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0

ENV PHP_VERSION 7.1.0
ENV PHP_URL="http://de1.php.net/get/php-7.1.0.tar.gz/from/this/mirror" 
ENV PHP_ASC_URL="http://de1.php.net/get/php-7.1.0.tar.gz.asc/from/this/mirror"

RUN mkdir -p ${SRC_DIR}
WORKDIR ${SRC_DIR}
RUN set -xe; \
	wget -O php.tar.gz ${PHP_URL}; \
	wget -O php.tar.gz.asc ${PHP_ASC_URL}; \
	for keys in ${GPG_KEYS}; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys $keys; \
	done; \
	gpg --batch --verify php.tar.gz.asc php.tar.gz;

RUN set -xe \
	&& tar xfvz php.tar.gz \
	&& cd ${SRC_DIR}/php-${PHP_VERSION} \
	&& ./configure \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		--disable-cgi \
		--enable-mbstring \
		--enable-mysqlnd \
		--with-curl \
		--with-libedit \
		--with-openssl \
		--with-zlib \
	&& make -j "$(nproc)" \
	&& make install \
	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
	&& make clean \
	&& rm -Rf ${SRC_DIR}/php* \
	&& apt purge --yes --auto-remove -o APT::AutoRemove::RecommendsImportant=false ${BUILD_DEPS}

COPY docker-php-ext-* /usr/local/bin/

##<autogenerated>##
WORKDIR /var/www/html

RUN set -ex \
	&& cd /usr/local/etc \
	&& if [ -d php-fpm.d ]; then \
		# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		# PHP 5.x doesn't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
		mkdir php-fpm.d; \
		cp php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi \
	&& { \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo; \
		echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
		echo 'catch_workers_output = yes'; \
	} | tee php-fpm.d/docker.conf \
	&& { \
		echo '[global]'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo 'listen = [::]:9000'; \
	} | tee php-fpm.d/zz-docker.conf

EXPOSE 9000
CMD ["php-fpm"]
